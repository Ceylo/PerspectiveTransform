version: 2.1
executors:
  latest-xcode:
    macos:
      xcode: '10.1.0'
jobs:
  test-on-macos:
    description: Run tests on Mac OS
    executor: latest-xcode
    shell: /bin/bash --login -o pipefail
    steps:
      - restore_cache:
          key: 1-opencv-{{ .Branch }}
      - run: for package in opencv xz $(brew deps opencv); do brew link $package || brew install $package; done
      - save_cache:
          key: 1-opencv-{{ .Branch }}
          paths:
            - /usr/local/Cellar/
      - run:
          name: Build and run tests
          command: xcodebuild -workspace Example/PerspectiveTransform.xcworkspace -scheme "OpenCV Tests" test -destination "platform=macos" | xcpretty -r junit
  run-tests:
    description: Run tests on parameterized xcode destination
    parameters:
      destination:
        description: Xcode destination to run tests
        type: string
    executor: latest-xcode
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run: gem install bundler
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          key: 2-pods-{{ checksum "Example/Podfile.lock" }}
      - run:
          name: Install CocoaPods
          command: |
            ls -la Example/Pods/Manifest.lock && echo Skipping cocoapods repo update || curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
            cmp Example/Pods/Manifest.lock Example/Podfile.lock && echo Skipping pod install || bundle exec pod install --project-directory=Example
      - save_cache:
          key: 2-pods-{{ checksum "Example/Podfile.lock" }}
          paths:
            - Example/Pods
      - run:
          name: Build and run tests
          command: xcodebuild -workspace Example/PerspectiveTransform.xcworkspace -scheme Example test -destination "<< parameters.destination >>" | xcpretty -r junit
      - store_test_results:
          path: build/reports
      - store_artifacts:
          path: build/reports
          destination: xcodebuild-test-results
workflows:
  build:
    jobs:
      - test-on-macos
      - run-tests:
          destination: platform=iOS Simulator,name=iPhone X
          post-steps:
            - run: bash <(curl -s 'https://codecov.io/bash') -Z -J '^PerspectiveTransform$' -X gcov -X fix
      - run-tests:
          destination: platform=iOS Simulator,name=iPhone XS
      - run-tests:
          destination: platform=iOS Simulator,name=iPhone XR
      - run-tests:
          destination: platform=iOS Simulator,name=iPhone 8
      - run-tests:
          destination: platform=iOS Simulator,name=iPhone 8 Plus
      - run-tests:
          destination: platform=iOS Simulator,name=iPhone SE
