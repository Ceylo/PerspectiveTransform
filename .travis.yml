language: swift
osx_image: xcode10.1
xcode_workspace: Example/PerspectiveTransform.xcworkspace
xcode_scheme: OpenCV Tests
git:
  depth: false
cache:
  cocoapods: true
bundler_args: --no-deployment
podfile: Example/Podfile
matrix:
  include:
  - xcode_scheme: OpenCV Tests
    env: XCODE_DESNITATION='platform=macos' CACHE_NAME=macOS
    before_install:
      - ls -la Example/Pods/Manifest.lock && echo Skipping cocoapods repo update || git -C ~/.cocoapods/repos/master/ pull --quiet
      - yes | pip2 uninstall numpy > /dev/null
      - for package in opencv xz $(brew deps opencv); do brew link $package || brew install $package; done
      - bundle -v || gem install bundler
    before_script:
      - bundle exec pod update --project-directory=Example
      - git diff --exit-code # Outdated Cocoapods dependencies found, please run 'pod update' and checkin changes
      - bundle update
      - git diff --exit-code # Outdated Bundle dependencies found, please run 'bundle update' and checkin changes
      - bundle exec pod lib lint --allow-warnings || bundle exec pod lib lint --allow-warnings --verbose
    cache:
      bundler: true
      cocoapods: true
      directories:
        - /usr/local/Cellar/opencv
        - /usr/local/Cellar/eigen
        - /usr/local/Cellar/eigen
        - /usr/local/Cellar/ffmpeg
        - /usr/local/Cellar/gdbm
        - /usr/local/Cellar/ilmbase
        - /usr/local/Cellar/jpeg
        - /usr/local/Cellar/lame
        - /usr/local/Cellar/libpng
        - /usr/local/Cellar/libtiff
        - /usr/local/Cellar/numpy
        - /usr/local/Cellar/openexr
        - /usr/local/Cellar/openssl
        - /usr/local/Cellar/python
        - /usr/local/Cellar/python3
        - /usr/local/Cellar/readline
        - /usr/local/Cellar/sqlite
        - /usr/local/Cellar/tbb
        - /usr/local/Cellar/x264
        - /usr/local/Cellar/xvid
        - /usr/local/Cellar/xz
before_install:
  - ls -la Example/Pods/Manifest.lock && echo Skipping cocoapods repo update || git -C ~/.cocoapods/repos/master/ pull --quiet
script:
  - set -o pipefail && xcodebuild clean test -workspace "$TRAVIS_XCODE_WORKSPACE" -scheme "$TRAVIS_XCODE_SCHEME" -destination "$XCODE_DESNITATION" | bundle exec xcpretty -f `bundle exec xcpretty-travis-formatter`
